/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mpes.sorteio.calendário.jornadas.liga.portugal.gui;

import java.util.HashMap;
import javax.swing.JOptionPane;
import mpes.sorteio.calendário.jornadas.liga.portugal.model.Championship;

/**
 *
 * @author vitorsantos
 */
public class AlgorithmChooserWindow extends javax.swing.JFrame {

    private Championship c;
    private HashMap<String, String> algorithmOptions;

    /**
     * Creates new form AlgorithmChooserWindow
     */
    public AlgorithmChooserWindow(Championship newC) {
        c = newC;
        algorithmOptions = new HashMap<String, String>();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmChooserPanel = new javax.swing.JPanel();
        algorithmOptionLabel = new javax.swing.JLabel();
        algorithmOptionComboBox = new javax.swing.JComboBox();
        algorithmParametersSeparator = new javax.swing.JSeparator();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        algorithmParametersScrollPane = new javax.swing.JScrollPane();
        geneticAlgorithmOptionsPanel = new mpes.sorteio.calendário.jornadas.liga.portugal.gui.GeneticAlgorithmOptionsPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        algorithmOptionLabel.setText("Algoritmo a usar:");

        algorithmOptionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "Algoritmo Genético", "Pesquisa Tabu" }));
        algorithmOptionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCorrespondentAlgorithmOptionsAction(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        if (((String) algorithmOptionComboBox.getSelectedItem()).equalsIgnoreCase("Seleccionar...")) {
            algorithmParametersScrollPane.setVisible(false);
        } else {
            algorithmParametersScrollPane.setVisible(true);
        }

        this.pack();

        if (((String) algorithmOptionComboBox.getSelectedItem()).equalsIgnoreCase("Algoritmo Genético")) {
            geneticAlgorithmOptionsPanel.setVisible(true);
        } else {
            geneticAlgorithmOptionsPanel.setVisible(false);
        }

        this.pack();
        algorithmParametersScrollPane.setViewportView(geneticAlgorithmOptionsPanel);

        org.jdesktop.layout.GroupLayout algorithmChooserPanelLayout = new org.jdesktop.layout.GroupLayout(algorithmChooserPanel);
        algorithmChooserPanel.setLayout(algorithmChooserPanelLayout);
        algorithmChooserPanelLayout.setHorizontalGroup(
            algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(algorithmChooserPanelLayout.createSequentialGroup()
                .add(104, 104, 104)
                .add(cancelButton)
                .add(110, 110, 110)
                .add(okButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, algorithmChooserPanelLayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(algorithmParametersScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, algorithmParametersSeparator)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, algorithmChooserPanelLayout.createSequentialGroup()
                        .add(algorithmOptionLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(algorithmOptionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(15, 15, 15))
        );
        algorithmChooserPanelLayout.setVerticalGroup(
            algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(algorithmChooserPanelLayout.createSequentialGroup()
                .add(17, 17, 17)
                .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(algorithmOptionLabel)
                    .add(algorithmOptionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(algorithmParametersSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(algorithmParametersScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, algorithmChooserPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(algorithmChooserPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
        new MainWindow(c).setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void showCorrespondentAlgorithmOptionsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCorrespondentAlgorithmOptionsAction
        if (((String) algorithmOptionComboBox.getSelectedItem()).equalsIgnoreCase("Seleccionar...")) {
            algorithmParametersScrollPane.setVisible(false);
        } else {
            algorithmParametersScrollPane.setVisible(true);
        }
        this.pack();

        if (((String) algorithmOptionComboBox.getSelectedItem()).equalsIgnoreCase("Algoritmo Genético")) {
            geneticAlgorithmOptionsPanel.setVisible(true);
        } else {
            geneticAlgorithmOptionsPanel.setVisible(false);
        }

        this.pack();
    }//GEN-LAST:event_showCorrespondentAlgorithmOptionsAction

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (((String) algorithmOptionComboBox.getSelectedItem()).equalsIgnoreCase("Algoritmo Genético")) {
            algorithmOptions = geneticAlgorithmOptionsPanel.extractParameters();

            if (algorithmOptions.containsKey("errorMsg")) {
                JOptionPane.showMessageDialog(this,
                        algorithmOptions.get("errorMsg"),
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);

                return;
            }

            this.setVisible(false);
            new MainWindow(c, "GA-HT", algorithmOptions).setVisible(true);
        }
    }//GEN-LAST:event_okButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel algorithmChooserPanel;
    private javax.swing.JComboBox algorithmOptionComboBox;
    private javax.swing.JLabel algorithmOptionLabel;
    private javax.swing.JScrollPane algorithmParametersScrollPane;
    private javax.swing.JSeparator algorithmParametersSeparator;
    private javax.swing.JButton cancelButton;
    private mpes.sorteio.calendário.jornadas.liga.portugal.gui.GeneticAlgorithmOptionsPanel geneticAlgorithmOptionsPanel;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
