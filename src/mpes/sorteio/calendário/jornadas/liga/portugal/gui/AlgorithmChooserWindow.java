/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mpes.sorteio.calendário.jornadas.liga.portugal.gui;

/**
 *
 * @author vitorsantos
 */
public class AlgorithmChooserWindow extends javax.swing.JFrame {

    /**
     * Creates new form AlgorithmChooserWindow
     */
    public AlgorithmChooserWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmChooserPanel = new javax.swing.JPanel();
        algorithmOptionLabel = new javax.swing.JLabel();
        algorithmOptionComboBox = new javax.swing.JComboBox();
        algorithmParametersSeparator = new javax.swing.JSeparator();
        geneticAlgorithmOptionsPanel = new javax.swing.JPanel();
        if(!((String) algorithmOptionComboBox.getSelectedItem()).equalsIgnoreCase("Algorítmo Genético")){
            geneticAlgorithmOptionsPanel.setVisible(false);
        }
        else{
            geneticAlgorithmOptionsPanel.setVisible(true);
        }
        terminationConditionsLabel = new javax.swing.JLabel();
        generationCountLabel = new javax.swing.JLabel();
        generationCountTextField = new javax.swing.JTextField();
        stagnationActiveLabel = new javax.swing.JLabel();
        selectionStrategyLabel = new javax.swing.JLabel();
        rankSelectionLabel = new javax.swing.JLabel();
        stagnationActiveCheckBox = new javax.swing.JCheckBox();
        rouletteWheelSelectionLabel = new javax.swing.JLabel();
        sigmaScalingSelectionLabel = new javax.swing.JLabel();
        stochasticSelectionLabel = new javax.swing.JLabel();
        tournamentSelectionLabel = new javax.swing.JLabel();
        truncationSelectionLabel = new javax.swing.JLabel();
        optionsSeparator = new javax.swing.JSeparator();
        rankSelectionRadioButton = new javax.swing.JRadioButton();
        rouletteWheelSelectionRadioButton = new javax.swing.JRadioButton();
        sigmaScalingSelectionRadioButton = new javax.swing.JRadioButton();
        stochasticSelectionRadioButton = new javax.swing.JRadioButton();
        tournamentSelectionRadioButton = new javax.swing.JRadioButton();
        tournamentSelectionProbabilityLabel = new javax.swing.JLabel();
        randomTournamentSelectionProbabilityCheckBox = new javax.swing.JCheckBox();
        fixedTournamentSelectionProbabilityTextField = new javax.swing.JTextField();
        truncationSelectionRadioButton = new javax.swing.JRadioButton();
        truncationSelectionRatioLabel = new javax.swing.JLabel();
        randomTruncationSelectionRatioCheckBox = new javax.swing.JCheckBox();
        fixedTruncationSelectionRatioTextField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        algorithmOptionLabel.setText("Algoritmo a usar:");

        algorithmOptionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar...", "Algoritmo Genético", "Pesquisa Tabu" }));

        terminationConditionsLabel.setText("Condições de Terminação:");

        generationCountLabel.setText("Número Máximo de Gerações:");

        generationCountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generationCountTextFieldActionPerformed(evt);
            }
        });

        stagnationActiveLabel.setText("Activar Estagnação?");

        selectionStrategyLabel.setText("Estratégia de Selecção:");

        rankSelectionLabel.setText("Ranking (Fitness Relativo)");

        stagnationActiveCheckBox.setText("Activar");

        rouletteWheelSelectionLabel.setText("Roleta Russa");

        sigmaScalingSelectionLabel.setText("Escalabilidade Sigma (desvio padrão)");

        stochasticSelectionLabel.setText("Selecção Estocástica");

        tournamentSelectionLabel.setText("Baseada em Torneio entre pares de soluções");

        truncationSelectionLabel.setText("Truncamento");

        rankSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankSelectionRadioButtonActionPerformed(evt);
            }
        });

        tournamentSelectionProbabilityLabel.setText("Valor probabilístico:");

        randomTournamentSelectionProbabilityCheckBox.setText("Aleatório");

        fixedTournamentSelectionProbabilityTextField.setText("Inserir valor fixo...");

        truncationSelectionRatioLabel.setText("Rácio de candidatos escolhidos:");

        randomTruncationSelectionRatioCheckBox.setText("Aleatório");
        randomTruncationSelectionRatioCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomTruncationSelectionRatioCheckBoxActionPerformed(evt);
            }
        });

        fixedTruncationSelectionRatioTextField.setText("Inserir valor fixo...");

        org.jdesktop.layout.GroupLayout geneticAlgorithmOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(geneticAlgorithmOptionsPanel);
        geneticAlgorithmOptionsPanel.setLayout(geneticAlgorithmOptionsPanelLayout);
        geneticAlgorithmOptionsPanelLayout.setHorizontalGroup(
            geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(optionsSeparator))
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(tournamentSelectionProbabilityLabel)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(generationCountLabel)
                            .add(stagnationActiveLabel)
                            .add(terminationConditionsLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 17, Short.MAX_VALUE)
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(generationCountTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 213, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(14, 14, 14))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(stagnationActiveCheckBox)
                                .add(90, 90, 90))))
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(selectionStrategyLabel)
                        .addContainerGap())
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(stochasticSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(stochasticSelectionRadioButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(sigmaScalingSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(sigmaScalingSelectionRadioButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(rouletteWheelSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(rouletteWheelSelectionRadioButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(rankSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(rankSelectionRadioButton))
                            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(tournamentSelectionLabel)
                                .add(18, 18, Short.MAX_VALUE)
                                .add(tournamentSelectionRadioButton))
                            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(truncationSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(truncationSelectionRadioButton)))
                        .add(21, 21, 21))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(truncationSelectionRatioLabel)
                        .add(18, 18, 18)
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(fixedTruncationSelectionRatioTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(randomTruncationSelectionRatioCheckBox)
                            .add(randomTournamentSelectionProbabilityCheckBox)
                            .add(fixedTournamentSelectionProbabilityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(61, 61, 61))))
        );
        geneticAlgorithmOptionsPanelLayout.setVerticalGroup(
            geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(selectionStrategyLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rankSelectionLabel)
                    .add(rankSelectionRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rouletteWheelSelectionLabel)
                    .add(rouletteWheelSelectionRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(sigmaScalingSelectionLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(stochasticSelectionLabel)
                        .add(18, 18, 18)
                        .add(tournamentSelectionLabel)
                        .add(18, 18, 18)
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(tournamentSelectionProbabilityLabel)
                            .add(randomTournamentSelectionProbabilityCheckBox)))
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(sigmaScalingSelectionRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(stochasticSelectionRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tournamentSelectionRadioButton)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(fixedTournamentSelectionProbabilityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(truncationSelectionLabel))
                    .add(truncationSelectionRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(truncationSelectionRatioLabel)
                    .add(randomTruncationSelectionRatioCheckBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(fixedTruncationSelectionRatioTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(optionsSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(terminationConditionsLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(generationCountLabel)
                    .add(generationCountTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(stagnationActiveLabel)
                    .add(stagnationActiveCheckBox))
                .add(30, 30, 30))
        );

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");

        org.jdesktop.layout.GroupLayout algorithmChooserPanelLayout = new org.jdesktop.layout.GroupLayout(algorithmChooserPanel);
        algorithmChooserPanel.setLayout(algorithmChooserPanelLayout);
        algorithmChooserPanelLayout.setHorizontalGroup(
            algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, algorithmChooserPanelLayout.createSequentialGroup()
                .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(algorithmChooserPanelLayout.createSequentialGroup()
                        .addContainerGap(18, Short.MAX_VALUE)
                        .add(geneticAlgorithmOptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(algorithmChooserPanelLayout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, algorithmParametersSeparator)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, algorithmChooserPanelLayout.createSequentialGroup()
                                .add(algorithmOptionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(algorithmOptionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .add(15, 15, 15))
            .add(algorithmChooserPanelLayout.createSequentialGroup()
                .add(102, 102, 102)
                .add(cancelButton)
                .add(92, 92, 92)
                .add(okButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        algorithmChooserPanelLayout.setVerticalGroup(
            algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(algorithmChooserPanelLayout.createSequentialGroup()
                .add(17, 17, 17)
                .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(algorithmOptionLabel)
                    .add(algorithmOptionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(algorithmParametersSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(algorithmChooserPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, algorithmChooserPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(algorithmChooserPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generationCountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generationCountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generationCountTextFieldActionPerformed

    private void rankSelectionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankSelectionRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rankSelectionRadioButtonActionPerformed

    private void randomTruncationSelectionRatioCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomTruncationSelectionRatioCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_randomTruncationSelectionRatioCheckBoxActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlgorithmChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlgorithmChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlgorithmChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlgorithmChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlgorithmChooserWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel algorithmChooserPanel;
    private javax.swing.JComboBox algorithmOptionComboBox;
    private javax.swing.JLabel algorithmOptionLabel;
    private javax.swing.JSeparator algorithmParametersSeparator;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField fixedTournamentSelectionProbabilityTextField;
    private javax.swing.JTextField fixedTruncationSelectionRatioTextField;
    private javax.swing.JLabel generationCountLabel;
    private javax.swing.JTextField generationCountTextField;
    private javax.swing.JPanel geneticAlgorithmOptionsPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JSeparator optionsSeparator;
    private javax.swing.JCheckBox randomTournamentSelectionProbabilityCheckBox;
    private javax.swing.JCheckBox randomTruncationSelectionRatioCheckBox;
    private javax.swing.JLabel rankSelectionLabel;
    private javax.swing.JRadioButton rankSelectionRadioButton;
    private javax.swing.JLabel rouletteWheelSelectionLabel;
    private javax.swing.JRadioButton rouletteWheelSelectionRadioButton;
    private javax.swing.JLabel selectionStrategyLabel;
    private javax.swing.JLabel sigmaScalingSelectionLabel;
    private javax.swing.JRadioButton sigmaScalingSelectionRadioButton;
    private javax.swing.JCheckBox stagnationActiveCheckBox;
    private javax.swing.JLabel stagnationActiveLabel;
    private javax.swing.JLabel stochasticSelectionLabel;
    private javax.swing.JRadioButton stochasticSelectionRadioButton;
    private javax.swing.JLabel terminationConditionsLabel;
    private javax.swing.JLabel tournamentSelectionLabel;
    private javax.swing.JLabel tournamentSelectionProbabilityLabel;
    private javax.swing.JRadioButton tournamentSelectionRadioButton;
    private javax.swing.JLabel truncationSelectionLabel;
    private javax.swing.JRadioButton truncationSelectionRadioButton;
    private javax.swing.JLabel truncationSelectionRatioLabel;
    // End of variables declaration//GEN-END:variables
}
