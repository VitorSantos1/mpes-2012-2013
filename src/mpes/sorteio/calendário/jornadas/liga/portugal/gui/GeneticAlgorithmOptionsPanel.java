/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mpes.sorteio.calendário.jornadas.liga.portugal.gui;

/**
 *
 * @author vitorsantos
 */
public class GeneticAlgorithmOptionsPanel extends javax.swing.JPanel {

    /**
     * Creates new form GeneticAlgorithmOptionsPanel
     */
    public GeneticAlgorithmOptionsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectionStrategyButtonGroup = new javax.swing.ButtonGroup();
        geneticAlgorithmOptionsPanel = new javax.swing.JPanel();
        terminationConditionsLabel = new javax.swing.JLabel();
        generationCountLabel = new javax.swing.JLabel();
        generationCountTextField = new javax.swing.JTextField();
        stagnationActiveLabel = new javax.swing.JLabel();
        selectionStrategyLabel = new javax.swing.JLabel();
        rankSelectionLabel = new javax.swing.JLabel();
        stagnationActiveCheckBox = new javax.swing.JCheckBox();
        rouletteWheelSelectionLabel = new javax.swing.JLabel();
        sigmaScalingSelectionLabel = new javax.swing.JLabel();
        stochasticSelectionLabel = new javax.swing.JLabel();
        tournamentSelectionLabel = new javax.swing.JLabel();
        truncationSelectionLabel = new javax.swing.JLabel();
        optionsSeparator = new javax.swing.JSeparator();
        rankSelectionRadioButton = new javax.swing.JRadioButton();
        rouletteWheelSelectionRadioButton = new javax.swing.JRadioButton();
        sigmaScalingSelectionRadioButton = new javax.swing.JRadioButton();
        stochasticSelectionRadioButton = new javax.swing.JRadioButton();
        tournamentSelectionRadioButton = new javax.swing.JRadioButton();
        tournamentSelectionProbabilityLabel = new javax.swing.JLabel();
        randomTournamentSelectionProbabilityCheckBox = new javax.swing.JCheckBox();
        fixedTournamentSelectionProbabilityTextField = new javax.swing.JTextField();
        truncationSelectionRadioButton = new javax.swing.JRadioButton();
        truncationSelectionRatioLabel = new javax.swing.JLabel();
        randomTruncationSelectionRatioCheckBox = new javax.swing.JCheckBox();
        fixedTruncationSelectionRatioTextField = new javax.swing.JTextField();

        selectionStrategyButtonGroup.add(rankSelectionRadioButton);
        selectionStrategyButtonGroup.add(rouletteWheelSelectionRadioButton);
        selectionStrategyButtonGroup.add(sigmaScalingSelectionRadioButton);
        selectionStrategyButtonGroup.add(stochasticSelectionRadioButton);
        selectionStrategyButtonGroup.add(tournamentSelectionRadioButton);
        selectionStrategyButtonGroup.add(truncationSelectionRadioButton);

        terminationConditionsLabel.setText("Condições de Terminação:");

        generationCountLabel.setText("Número Máximo de Gerações:");

        stagnationActiveLabel.setText("Activar Estagnação?");

        selectionStrategyLabel.setText("Estratégia de Selecção:");

        rankSelectionLabel.setText("Ranking (Fitness Relativo)");

        stagnationActiveCheckBox.setText("Activar");

        rouletteWheelSelectionLabel.setText("Roleta Russa");

        sigmaScalingSelectionLabel.setText("Escalabilidade Sigma (desvio padrão)");

        stochasticSelectionLabel.setText("Selecção Estocástica");

        tournamentSelectionLabel.setText("Baseada em Torneio entre pares de soluções");

        truncationSelectionLabel.setText("Truncamento");

        rankSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankSelectionRadioButtonActionPerformed(evt);
            }
        });

        rouletteWheelSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rouletteWheelSelectionRadioButtonActionPerformed(evt);
            }
        });

        sigmaScalingSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigmaScalingSelectionRadioButtonActionPerformed(evt);
            }
        });

        stochasticSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stochasticSelectionRadioButtonActionPerformed(evt);
            }
        });

        tournamentSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectingTournamentSelectionAction(evt);
            }
        });

        tournamentSelectionProbabilityLabel.setText("Valor probabilístico:");

        randomTournamentSelectionProbabilityCheckBox.setText("Aleatório");
        if(tournamentSelectionRadioButton.isSelected()){
            randomTournamentSelectionProbabilityCheckBox.setEnabled(true);
        }
        else{
            randomTournamentSelectionProbabilityCheckBox.setEnabled(false);
        }
        randomTournamentSelectionProbabilityCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomTournamentSelectionProbabilityCheckBoxActionPerformed(evt);
            }
        });

        fixedTournamentSelectionProbabilityTextField.setText("Inserir valor fixo...");
        if (tournamentSelectionRadioButton.isSelected()) {
            fixedTournamentSelectionProbabilityTextField.setEnabled(true);
        } else {
            fixedTournamentSelectionProbabilityTextField.setEnabled(false);
        }

        truncationSelectionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                truncationSelectionRadioButtonActionPerformed(evt);
            }
        });

        truncationSelectionRatioLabel.setText("Rácio de candidatos escolhidos:");

        randomTruncationSelectionRatioCheckBox.setText("Aleatório");
        if(tournamentSelectionRadioButton.isSelected()){
            randomTruncationSelectionRatioCheckBox.setEnabled(true);
        }
        else{
            randomTruncationSelectionRatioCheckBox.setEnabled(false);
        }
        randomTruncationSelectionRatioCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomTruncationSelectionRatioCheckBoxActionPerformed(evt);
            }
        });

        fixedTruncationSelectionRatioTextField.setText("Inserir valor fixo...");
        if (tournamentSelectionRadioButton.isSelected()) {
            fixedTruncationSelectionRatioTextField.setEnabled(true);
        } else {
            fixedTruncationSelectionRatioTextField.setEnabled(false);
        }

        org.jdesktop.layout.GroupLayout geneticAlgorithmOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(geneticAlgorithmOptionsPanel);
        geneticAlgorithmOptionsPanel.setLayout(geneticAlgorithmOptionsPanelLayout);
        geneticAlgorithmOptionsPanelLayout.setHorizontalGroup(
            geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(optionsSeparator))
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(tournamentSelectionProbabilityLabel)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(generationCountLabel)
                            .add(stagnationActiveLabel)
                            .add(terminationConditionsLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(generationCountTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 213, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(14, 14, 14))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(stagnationActiveCheckBox)
                                .add(90, 90, 90))))
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(selectionStrategyLabel)
                        .addContainerGap())
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(stochasticSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(stochasticSelectionRadioButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(sigmaScalingSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(sigmaScalingSelectionRadioButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(rouletteWheelSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(rouletteWheelSelectionRadioButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(rankSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(rankSelectionRadioButton))
                            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(tournamentSelectionLabel)
                                .add(18, 18, Short.MAX_VALUE)
                                .add(tournamentSelectionRadioButton))
                            .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                                .add(truncationSelectionLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(truncationSelectionRadioButton)))
                        .add(21, 21, 21))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(truncationSelectionRatioLabel)
                        .add(18, 18, 18)
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(fixedTruncationSelectionRatioTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(randomTruncationSelectionRatioCheckBox)
                            .add(randomTournamentSelectionProbabilityCheckBox)
                            .add(fixedTournamentSelectionProbabilityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(61, 61, 61))))
        );
        geneticAlgorithmOptionsPanelLayout.setVerticalGroup(
            geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(selectionStrategyLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rankSelectionLabel)
                    .add(rankSelectionRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rouletteWheelSelectionLabel)
                    .add(rouletteWheelSelectionRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(sigmaScalingSelectionLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(stochasticSelectionLabel)
                        .add(18, 18, 18)
                        .add(tournamentSelectionLabel)
                        .add(18, 18, 18)
                        .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(tournamentSelectionProbabilityLabel)
                            .add(randomTournamentSelectionProbabilityCheckBox)))
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(sigmaScalingSelectionRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(stochasticSelectionRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tournamentSelectionRadioButton)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(fixedTournamentSelectionProbabilityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(geneticAlgorithmOptionsPanelLayout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(truncationSelectionLabel))
                    .add(truncationSelectionRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(truncationSelectionRatioLabel)
                    .add(randomTruncationSelectionRatioCheckBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(fixedTruncationSelectionRatioTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(optionsSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(terminationConditionsLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(generationCountLabel)
                    .add(generationCountTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(geneticAlgorithmOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(stagnationActiveLabel)
                    .add(stagnationActiveCheckBox))
                .add(30, 30, 30))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 447, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(geneticAlgorithmOptionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 517, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(geneticAlgorithmOptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enableTournamentSpecificParameters(boolean willEnable){
        randomTournamentSelectionProbabilityCheckBox.setEnabled(willEnable);
        fixedTournamentSelectionProbabilityTextField.setEnabled(willEnable);
    }
    
    private void enableTruncationSpecificParameters(boolean willEnable){
        randomTruncationSelectionRatioCheckBox.setEnabled(willEnable);
        fixedTruncationSelectionRatioTextField.setEnabled(willEnable);
    }
    
    private void rankSelectionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankSelectionRadioButtonActionPerformed
        this.enableTournamentSpecificParameters(false);
        this.enableTruncationSpecificParameters(false);
    }//GEN-LAST:event_rankSelectionRadioButtonActionPerformed

    private void randomTruncationSelectionRatioCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomTruncationSelectionRatioCheckBoxActionPerformed
        if(randomTruncationSelectionRatioCheckBox.isSelected()){
            fixedTruncationSelectionRatioTextField.setEnabled(false);
        }
        else{
            fixedTruncationSelectionRatioTextField.setEnabled(true);
        }
    }//GEN-LAST:event_randomTruncationSelectionRatioCheckBoxActionPerformed

    private void selectingTournamentSelectionAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectingTournamentSelectionAction
        this.enableTournamentSpecificParameters(true);
        this.enableTruncationSpecificParameters(false);
    }//GEN-LAST:event_selectingTournamentSelectionAction

    private void rouletteWheelSelectionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rouletteWheelSelectionRadioButtonActionPerformed
        this.enableTournamentSpecificParameters(false);
        this.enableTruncationSpecificParameters(false);
    }//GEN-LAST:event_rouletteWheelSelectionRadioButtonActionPerformed

    private void sigmaScalingSelectionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigmaScalingSelectionRadioButtonActionPerformed
        this.enableTournamentSpecificParameters(false);
        this.enableTruncationSpecificParameters(false);
    }//GEN-LAST:event_sigmaScalingSelectionRadioButtonActionPerformed

    private void stochasticSelectionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stochasticSelectionRadioButtonActionPerformed
        this.enableTournamentSpecificParameters(false);
        this.enableTruncationSpecificParameters(false);
    }//GEN-LAST:event_stochasticSelectionRadioButtonActionPerformed

    private void truncationSelectionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_truncationSelectionRadioButtonActionPerformed
        this.enableTournamentSpecificParameters(false);
        this.enableTruncationSpecificParameters(true);
    }//GEN-LAST:event_truncationSelectionRadioButtonActionPerformed

    private void randomTournamentSelectionProbabilityCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomTournamentSelectionProbabilityCheckBoxActionPerformed
        if(randomTournamentSelectionProbabilityCheckBox.isSelected()){
            fixedTournamentSelectionProbabilityTextField.setEnabled(false);
        }
        else{
            fixedTournamentSelectionProbabilityTextField.setEnabled(true);
        }
    }//GEN-LAST:event_randomTournamentSelectionProbabilityCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fixedTournamentSelectionProbabilityTextField;
    private javax.swing.JTextField fixedTruncationSelectionRatioTextField;
    private javax.swing.JLabel generationCountLabel;
    private javax.swing.JTextField generationCountTextField;
    private javax.swing.JPanel geneticAlgorithmOptionsPanel;
    private javax.swing.JSeparator optionsSeparator;
    private javax.swing.JCheckBox randomTournamentSelectionProbabilityCheckBox;
    private javax.swing.JCheckBox randomTruncationSelectionRatioCheckBox;
    private javax.swing.JLabel rankSelectionLabel;
    private javax.swing.JRadioButton rankSelectionRadioButton;
    private javax.swing.JLabel rouletteWheelSelectionLabel;
    private javax.swing.JRadioButton rouletteWheelSelectionRadioButton;
    private javax.swing.ButtonGroup selectionStrategyButtonGroup;
    private javax.swing.JLabel selectionStrategyLabel;
    private javax.swing.JLabel sigmaScalingSelectionLabel;
    private javax.swing.JRadioButton sigmaScalingSelectionRadioButton;
    private javax.swing.JCheckBox stagnationActiveCheckBox;
    private javax.swing.JLabel stagnationActiveLabel;
    private javax.swing.JLabel stochasticSelectionLabel;
    private javax.swing.JRadioButton stochasticSelectionRadioButton;
    private javax.swing.JLabel terminationConditionsLabel;
    private javax.swing.JLabel tournamentSelectionLabel;
    private javax.swing.JLabel tournamentSelectionProbabilityLabel;
    private javax.swing.JRadioButton tournamentSelectionRadioButton;
    private javax.swing.JLabel truncationSelectionLabel;
    private javax.swing.JRadioButton truncationSelectionRadioButton;
    private javax.swing.JLabel truncationSelectionRatioLabel;
    // End of variables declaration//GEN-END:variables
}
